
package com.rit.cs.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "GeoService", targetNamespace = "http://controller.cs.rit.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GeoService {


    /**
     * 
     * @param phoneNo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verify", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.Verify")
    @ResponseWrapper(localName = "verifyResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.VerifyResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/verifyRequest", output = "http://controller.cs.rit.com/GeoService/verifyResponse")
    public boolean verify(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo);

    /**
     * 
     * @param latitude
     * @param phoneNo
     * @param longitude
     */
    @WebMethod
    @RequestWrapper(localName = "updateLocation", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.UpdateLocation")
    @ResponseWrapper(localName = "updateLocationResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.UpdateLocationResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/updateLocationRequest", output = "http://controller.cs.rit.com/GeoService/updateLocationResponse")
    public void updateLocation(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo,
        @WebParam(name = "latitude", targetNamespace = "")
        double latitude,
        @WebParam(name = "longitude", targetNamespace = "")
        double longitude);

    /**
     * 
     * @param service
     * @param phoneNo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeService", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.RemoveService")
    @ResponseWrapper(localName = "removeServiceResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.RemoveServiceResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/removeServiceRequest", output = "http://controller.cs.rit.com/GeoService/removeServiceResponse")
    public boolean removeService(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo,
        @WebParam(name = "service", targetNamespace = "")
        String service);

    /**
     * 
     * @param service
     * @param description
     * @param phoneNo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addService", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.AddService")
    @ResponseWrapper(localName = "addServiceResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.AddServiceResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/addServiceRequest", output = "http://controller.cs.rit.com/GeoService/addServiceResponse")
    public boolean addService(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo,
        @WebParam(name = "service", targetNamespace = "")
        String service,
        @WebParam(name = "description", targetNamespace = "")
        String description);

    /**
     * 
     * @param latitude
     * @param name
     * @param phoneNo
     * @param longitude
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registerProvider", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.RegisterProvider")
    @ResponseWrapper(localName = "registerProviderResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.RegisterProviderResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/registerProviderRequest", output = "http://controller.cs.rit.com/GeoService/registerProviderResponse")
    public boolean registerProvider(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "latitude", targetNamespace = "")
        double latitude,
        @WebParam(name = "longitude", targetNamespace = "")
        double longitude);

    /**
     * 
     * @param phoneNo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "goOffline", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.GoOffline")
    @ResponseWrapper(localName = "goOfflineResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.GoOfflineResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/goOfflineRequest", output = "http://controller.cs.rit.com/GeoService/goOfflineResponse")
    public boolean goOffline(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo);

    /**
     * 
     * @param phoneNo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "goOnline", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.GoOnline")
    @ResponseWrapper(localName = "goOnlineResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.GoOnlineResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/goOnlineRequest", output = "http://controller.cs.rit.com/GeoService/goOnlineResponse")
    public boolean goOnline(
        @WebParam(name = "phoneNo", targetNamespace = "")
        long phoneNo);

    /**
     * 
     * @param distance
     * @param service
     * @param latitude
     * @param longitude
     * @return
     *     returns java.util.List<com.rit.cs.client.ResultModel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "requestService", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.RequestService")
    @ResponseWrapper(localName = "requestServiceResponse", targetNamespace = "http://controller.cs.rit.com/", className = "com.rit.cs.client.RequestServiceResponse")
    @Action(input = "http://controller.cs.rit.com/GeoService/requestServiceRequest", output = "http://controller.cs.rit.com/GeoService/requestServiceResponse")
    public List<ResultModel> requestService(
        @WebParam(name = "service", targetNamespace = "")
        String service,
        @WebParam(name = "latitude", targetNamespace = "")
        double latitude,
        @WebParam(name = "longitude", targetNamespace = "")
        double longitude,
        @WebParam(name = "distance", targetNamespace = "")
        double distance);

}
